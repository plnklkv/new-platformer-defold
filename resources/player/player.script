go.property("damage_player", 30)
go.property("shot_player", 60)
local speed = 150
local money = 0
local score = 0
local shield = 0

local platypus = require "platypus.platypus"

local max_health = 100
local player_health = 100
local player_mana = 50

local player_health_shield = nil

local GROUP_enemy = hash("enemy")
local enemy_CONTACT = false

local GROUP_spikes = hash("spikes")


local add_player_health = hash("add_player_health")
local add_player_money = hash("add_player_money")
local add_player_mana = hash("add_player_mana")

local msg_id = nil

local contact_point_response = hash("contact_point_response")

local attack_shield = false

local input_attack = hash("attack")
local input_shot = hash("shot")
local input_interactive = hash("interactive")

local msg_simple_attack = hash("simple_attack")

local GROUP_chests = hash("chests")

local button_contact = false
local open_door = false

local bonfire_contact = false

local id_outfit1 = 0
local id_outfit3 = 0

function init(self)
	msg.post(".", "acquire_input_focus")

	print("ЗАГРУЖЕНО")
	
	self.input_state = {}
	self.platypus = platypus.create({
		collisions = {
			separation = platypus.SEPARATION_RAYS,
			groups = {
				[hash("platform")] = platypus.DIR_ALL,
				[hash("obstacle_for_enemy")] = platypus.DIR_ALL,

			},
			left = 9, right = 9, top = 14, bottom = 14, offset = vmath.vector3(0, -3, 0)
		},
		debug = false,
		gravity = -500,
		allow_double_jump = true,

		allow_wall_jump = true,
		allow_wall_slide = true,
		wall_slide_gravity = -50,
	})

	--для выстрела
	self.firing = false
	self.pos_shot = go.get_position()

	self.cooldown = true
	self.cooldown_activate_attack = true
	self.cooldown_scill2 = true
	
	self.damage_enemy = nil

	--сообщения в меню 
	update_menu(self.damage_player)
end

function update_menu(damage)
	label.set_text("platform#score", score)
	--сообщения в меню
	msg.post("main:/menu#menu", "message_menu", {score = score, money = money, max_health = max_health, damage = damage, speed = speed, shield = shield})
end

--ф-ии для карабканья вверх/вниз
local function climb_up(self)
	--self.climbing = true
	self.platypus.gravity = 0
	self.platypus.velocity.y = 0
	self.platypus.up(speed/2)
end

local function climb_down(self)
	--self.climbing = true
	self.platypus.gravity = 0
	self.platypus.velocity.y = 0
	self.platypus.down(speed/2)
end

--атака на врага
local function decrease_enemy_health(self, msg_id, damage)
	print("damsmd = ", damage)
	msg.post(msg_id, "simple_attack", {damage_player = damage})
end

--функция для КД
local function cooldown(self)
	self.cooldown = false
	
	timer.delay(2, false, function()
		self.cooldown = true
	end)
end

--функция для первого актииируемого навыка
local function cooldown_activate_attack(self)
	self.cooldown_activate_attack = false
	timer.delay(4, false, function()
		self.cooldown_activate_attack = true
	end)
end

--для второго акт навыка
function cooldown_scill2(self, value)
	self.cooldown_scill2 = false
	timer.delay(go.get("weapon#weapon", "cooldown"), false, function()
		self.cooldown_scill2 = true
	end)
end

--уменьшение здоровья игрока
local function decrease_player_health(self)
	--сделать потом чтоб останавливаться
	--self.damage_enemy = go.get(msg_id, "damage_enemy")
	player_health = player_health - (50 - shield)
	cooldown(self)
	--game over lol
end

function update(self, dt)
	self.platypus.update(dt)

	--стоит ли игрок на земле
	local ground_contact = self.platypus.has_ground_contact()

	if self.input_state[hash("up")] then
		if self.ladder then
			climb_up(self)
		end
	elseif self.input_state[hash("down")] then
		if self.ladder and not ground_contact then
			climb_down(self)
		end
	end

	--шкала здоровья
	msg.post("lifebar_progress1#lifebar", "set_mana", {mana = player_mana, max_mana = 100})

	enemy_CONTACT = false --убрать и поставить кд на аьаки обычные

	--тоже уберу потом (дублирую пока)
	if player_health > max_health then
		player_health = max_health
	end

	if player_health <= 0 then
		player_health = 0

		--msg.post("main:/menu#menu", "game_reset")		
	end

	msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = max_health, player = true})
	
end

function on_message(self, message_id, message, sender)
	self.platypus.on_message(message_id, message)
	if message_id == contact_point_response then
		--

	end
	
	--сложность
	if message_id == hash("diff_attack") then
		self.damage_player = self.damage_player/message.attack_diff
		self.shot_player = self.shot_player/message.attack_diff
	end
	
	if message_id == hash("trigger_response") then
		--контакт с костром
		if message.group == hash("bonfire") then
			if message.enter then
				bonfire_contact = true
			else
				bonfire_contact = false
			end
		end	
		
		--контакт с лестницей
		if message.other_group == hash("ladder") then
			if message.enter then
				self.ladder = true
			else
				self.platypus.gravity = -500
				self.ladder = false
				--self.climbing = false
			end
		end
		
		--контакт с врагом
		if message.group == GROUP_enemy then
			if message.enter then
			enemy_CONTACT = true
			--
			msg_id = message.other_id
		else
			enemy_CONTACT = false
		end
	end

		--контакт с шипами
		if message.group == GROUP_spikes and self.cooldown then
			player_health = player_health - 5
			cooldown(self)
			--дублирую пока чтоб работало
			msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = max_health, player = true})
		end
		
		--контакт с кнопкой для открытия двери
		if message.group == hash("button") then
			if message.enter then
				button_contact = true
			else
				button_contact = false
			end
		end

		--контакт с дверью
		if message.group == hash("door") then
			if open_door then
				print("дверь открыта")
			else
				print("дверь закрыта")
			end
		end

		--контакт с вещами
		if message.group == hash("outfit1") then
			print("шлем взят")
			msg.post("main:/menu#menu", "add_outfit", {type = "outfit1"})
			go.delete(id_outfit1)

			--
			
		end

		if message.group == hash("outfit3") then
			print("сапоги взяты")
			msg.post("main:/menu#menu", "add_outfit", {type = "outfit3"})
			go.delete(id_outfit3)

			--увеличение скорости
			speed = speed + 50
		end
	end

	--атака от врага
	if message_id == msg_simple_attack and attack_shield == false and self.cooldown then
		decrease_player_health(self)
	end

	--сообщение о смерти врага
	if message_id == hash("enemy_death") then
		--score = label.get_text("platform#score")
		score = score + message.score
		
		update_menu(self.damage_player)
	end

	--обновление характеристик от меню
	if message_id == hash("menu_update_player") then
		print("menu update message")
		max_health = message.max_health
		self.damage_player = message.damage_player
		--go.set("#", "damage_player", message.damage_player)
		print(self.damage_player)
		speed = message.speed
		shield = message.shield
		player_health = max_health
		score = message.score
		update_menu(self.damage_player)
	end	

	--активируемый навык
	if message_id == hash("scill") and player_mana >= 20 then
		if message.scill == 1 and self.cooldown_activate_attack and enemy_CONTACT then
			print("активируемый навык")
			cooldown_activate_attack(self)
			decrease_enemy_health(self, msg_id, self.damage_player*1.5)
			player_mana = player_mana - 20
			
		--второй активируемый навык: метание меча
		elseif message.scill == 2 and self.cooldown_scill2 then
			factory.create("weapon#factory_weapon")
			msg.post("weapon#weapon", "create_weapon")
			cooldown_scill2(self, 15)
			print(go.get("weapon#weapon", "damage"))
				
		--третий актив навык: телепорт
		elseif message.scill == 3 then

			
		end
	end

	--сообщ для получения лута
	if message_id == hash("loot_contact") then
		--контакт с лутом ом ом :)
		--контакт со "здоровьем"
		if message.collision == hash("collision_health") then
			player_health = player_health + 10

			--тоже уберу потом (дублирую пока)
			if player_health > 100 then
				player_health = 100
			end

			--дублирую пока чтоб работало
			msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = max_health, player = true})
		end

		--контакт с "деньгами"
		if message.collision == hash("collision_money") then
			print("plus money ")

			money = money + 100
			label.set_text("platform#money", money)

			--сообщ в меню для денег
			--msg.post("main:/menu#menu", "money_menu", {money = money})

			update_menu(self.damage_player)
		end

		--контакт с "маной"
		if  message.collision == hash("collision_mana") then
			print("plus mana ")

			player_mana = player_mana + 10

			--тоже уберу потом (дублирую пока)
			if player_mana > 100 then
				player_mana = 100
			end

			--дублирую пока чтоб работало
			msg.post("lifebar_progress1#lifebar", "set_mana", {mana = player_mana, max_mana = 100})

		end
	end
	
	--получения экз вещей для удаления
	if message_id == hash("id_sender1") then
		id_outfit1 = message.id_outfit1
	end

	if message_id == hash("id_sender3") then
		id_outfit3 = message.id_outfit3
	end
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		self.platypus.left(speed)

	elseif action_id == hash("right") then
		self.platypus.right(speed)
	end

	if action_id == hash("jump") then
		if action.pressed then
			self.platypus.jump(speed*2.5)
		elseif action.released then
			self.platypus.abort_jump(0.5)
		end
	end

	--карабканье
	if action_id == hash("up") and self.ladder then
		climb_up(self)
	elseif action_id == hash("down") and self.ladder then
		climb_down(self)
	end

	--открытие меню
	if action_id == input_interactive and bonfire_contact then
		--сообщ для открытия меню
		msg.post("main:/menu#menu", "open_menu")
	end
	
	--атака
	if action_id == input_attack and enemy_CONTACT and not attack_shield then
		decrease_enemy_health(self, msg_id, self.damage_player)
		--[[enemy_CONTACT = false
		timer.delay(15, false, function()
			enemy_CONTACT = true
		end)]]--
	end

	--выстрел
	if action_id == input_shot and action.released then
		factory.create("shot#shot")
		msg.post("shot#shot1", "shot_in_enemy")
	end

	--защита
	if action_id == hash("shield") then
		if action.pressed then
			attack_shield = true
		elseif action.released then
			attack_shield = false
		end
	end

	--открытие сундука, ...
	if action_id == input_interactive and action.pressed then
		msg.post("chests#chests", "open_chests")
	end

	--открытие двери
	if action_id == input_interactive and button_contact and not open_door then
		print("открытие двери...")
		open_door = true
	end
end