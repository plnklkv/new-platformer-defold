local platypus = require "platypus.platypus"
local player_health = 100
local player_mana = 50

local player_health_shield = nil

local GROUP_enemy = hash("enemy")
local enemy_CONTACT = false

local GROUP_spikes = hash("spikes")


local add_player_health = hash("add_player_health")
local add_player_money = hash("add_player_money")
local add_player_mana = hash("add_player_mana")

local msg_id = nil

local contact_point_response = hash("contact_point_response")

local money = 0

local attack_shield = false

local input_attack = hash("attack")
local input_shot = hash("shot")
local input_interactive = hash("interactive")

local msg_simple_attack = hash("simple_attack")

local GROUP_chests = hash("chests")
local msg_sender = nil

local button_contact = false
local open_door = false

function init(self)
	msg.post(".", "acquire_input_focus")

	self.input_state = {}
	self.platypus = platypus.create({
		collisions = {
			separation = platypus.SEPARATION_RAYS,
			groups = {
				[hash("platform")] = platypus.DIR_ALL,
				[hash("obstacle_for_enemy")] = platypus.DIR_ALL,

			},
			left = 9, right = 9, top = 14, bottom = 14, offset = vmath.vector3(0, -3, 0)
		},
		debug = false,
		gravity = -800,
		max_velocity = 300,
		allow_double_jump = true,

		allow_wall_jump = true,
		allow_wall_slide = true,
		wall_slide_gravity = -50,

	})

	--для выстрела
	self.firing = false
	self.pos_shot = go.get_position()

	self.cooldown = true
end

--ф-ии для карабканья вверх/вниз
local function climb_up(self)
	--self.climbing = true
	self.platypus.gravity = 0
	self.platypus.velocity.y = 0
	self.platypus.up(60)
end

local function climb_down(self)
	--self.climbing = true
	self.platypus.gravity = 0
	self.platypus.velocity.y = 0
	self.platypus.down(80)
end

--атака на врага
local function decrease_enemy_health(self, msg_id)
	msg.post(msg_id, "simple_attack")
end

--функция для КД
local function cooldown(self)
	self.cooldown = false
	timer.delay(4, false, function()
		self.cooldown = true
	end)
end

--уменьшение здоровья игрока
local function decrease_player_health(self)
	--сделать потом чтоб останавливаться
	player_health = player_health - 10
	cooldown(self)
	--game over lol
end

function update(self, dt)
	self.platypus.update(dt)

	--стоит ли игрок на земле
	local ground_contact = self.platypus.has_ground_contact()

	if self.input_state[hash("up")] then
		if self.ladder then
			climb_up(self)
		end
	elseif self.input_state[hash("down")] then
		if self.ladder and not ground_contact then
			climb_down(self)
		end
	end


	--стрельба
	if self.firing then 
		factory.create("shot#shot")
		msg.post("shot#shot1", "shot_in_enemy")
	end
	self.firing = false


	--шкала здоровья
	msg.post("lifebar_progress1#lifebar", "set_mana", {mana = player_mana, max_mana = 100})

	enemy_CONTACT = false

	--тоже уберу потом (дублирую пока)
	if player_health > 100 then
		player_health = 100
	end

	if player_health <= 0 then
		player_health = 0
	end

	msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = 100, player = true})
end

function on_message(self, message_id, message, sender)
	self.platypus.on_message(message_id, message)
	if message_id == contact_point_response then
		--

	end

	if message_id == hash("trigger_response") then
		--контакт с лестницей
		if message.other_group == hash("ladder") then
			if message.enter then
				self.ladder = true
			else
				self.platypus.gravity = -800
				self.ladder = false
				--self.climbing = false
			end
		end

		--контакт с врагом
		if message.group == GROUP_enemy then
			enemy_CONTACT = true
			--
			msg_id = message.other_id
		elseif message.group ~= GROUP_enemy then
			enemy_CONTACT = false
		end

		--контакт с лутом ом ом :)
		--контакт со "здоровьем"
		if message.other_group == hash("health") then
			player_health = player_health + 10

			--тоже уберу потом (дублирую пока)
			if player_health > 100 then
				player_health = 100
			end

			--дублирую пока чтоб работало
			msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = 100, player = true})
		end

		--контакт с "деньгами"
		if  message.other_group == hash("money") then
			print("plus money ")

			money = money + 100
			label.set_text("platform#money", money)
		end

		--контакт с "маной"
		if  message.other_group == hash("mana") then
			print("plus mana ")

			player_mana = player_mana + 10

			--тоже уберу потом (дублирую пока)
			if player_mana > 100 then
				player_mana = 100
			end

			--дублирую пока чтоб работало
			msg.post("lifebar_progress1#lifebar", "set_mana", {mana = player_mana, max_mana = 100})

		end

		--контакт с кнопкой для открытия двери
		if message.group == hash("button") then
			if message.enter then
				button_contact = true
			else
				button_contact = false
			end
		end

		--контакт с дверью
		if message.group == hash("door") then
			if open_door then
				print("дверь открыта")
			else
				print("дверь закрыта")
			end
		end
	end

	--атака от врага
	if message_id == msg_simple_attack and attack_shield == false and self.cooldown then
		decrease_player_health(self)
	end

	--контакт с шипами
	if message.group == GROUP_spikes and self.cooldown then
		player_health = player_health - 5
		cooldown(self)
		--дублирую пока чтоб работало
		msg.post("lifebar_progress1#lifebar", "set_health", {health = player_health, max_health = 100, player = true})
	end
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		self.platypus.left(150)

	elseif action_id == hash("right") then
		self.platypus.right(150)
	end

	if action_id == hash("jump") then
		if action.pressed then
			self.platypus.jump(500)
		elseif action.released then
			self.platypus.abort_jump(0.5)
		end
	end

	--карабканье
	if action_id == hash("up") and self.ladder then
		climb_up(self)
	elseif action_id == hash("down") and self.ladder then
		climb_down(self)
	end

	--атака
	if action_id == input_attack and enemy_CONTACT and not attack_shield then --and enemy_health > 0
		decrease_enemy_health(self, msg_id)
	end

	--выстрел
	if action_id == input_shot and action.released then
		self.firing = true
	end

	--защита
	if action_id == hash("shield") then
		if action.pressed then
			attack_shield = true
		elseif action.released then
			attack_shield = false
		end
	end

	--открытие сундука, ...
	if action_id == input_interactive and action.pressed then
		msg.post("chests#chests", "open_chests")
	end

	--открытие двери
	if action_id == input_interactive and button_contact and not open_door then
		print("открытие двери...")
		open_door = true
	end

end