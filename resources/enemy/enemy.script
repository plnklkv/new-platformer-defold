local GROUP_player = hash("player")

local msg_attack_shield = hash("attack_shield")
local msg_simple_attack = hash("simple_attack")
local msg_shot_attack = hash("shot_attack")

local score = 0

function init(self)
	self.obstacle_for_enemy_CONTACT = false
	self.GROUP_obstacle_for_enemy = hash("obstacle_for_enemy")

	self.speed = 50
	
	self.enemy_health = 50
	self.pos = vmath.vector3(552, 222, 0)

	--для остановки перед игроком
	self.player_attack = false
	
end

--атака на игрока
local function decrease_player_health(self)
	msg.post("player#player", "simple_attack")
end

--уменьшение здоровья врага, смерть и лут
local function decrease_enemy_health(self, damage)
	self.enemy_health = self.enemy_health - damage

	if self.enemy_health <= 0 then
		--выпадает лут
		msg.post("loot#loot", "create_loot", {pos_loot = self.pos, score = 10})

		--СМЕРТЬ
		go.delete(go.get_id("enemy"));
	end
end

function update(self, dt)
	if not self.player_attack then
		--self.platypus.update(dt)
		self.pos = go.get_position()

		--типа движение врага
		self.pos.x = self.pos.x + self.speed * dt
		go.set_position(self.pos)
	end

	self.player_attack = false
	
	--шкала здоровья
	msg.post("lifebar_progress#lifebar", "set_health", {health = self.enemy_health, max_health = 50, player = false})
end

function on_message(self, message_id, message, sender)
	--столкновение врага с препятсвием
	if message.group == self.GROUP_obstacle_for_enemy then
		if self.obstacle_for_enemy_CONTACT then
			self.obstacle_for_enemy_CONTACT = false
			self.speed = -self.speed
		else
			self.obstacle_for_enemy_CONTACT = true
		end
	end

	if message.group == GROUP_player then
		--остановка перед атакой перед игроком
		self.player_attack = true
		decrease_player_health(self)
	end

	--атака от игрока
	if message_id == msg_simple_attack then
		decrease_enemy_health(self, 10)
	end

	--выстрел от игрока
	if message_id == msg_shot_attack then
		decrease_enemy_health(self, 20)
	end
end