go.property("health", 60)
go.property("max_health", 60)
go.property("damage_enemy", 20)

local GROUP_player = hash("player")

function init(self)
	self.obstacle_for_enemy_CONTACT = false
	self.GROUP_obstacle_for_enemy = hash("obstacle_for_enemy")

	self.speed = 50
	self.enemy_health = 50
	self.pos = vmath.vector3(0, 0, 0)

	--для остановки перед игроком
	self.player_attack = false

	self.msg_shot_attack = hash("shot_attack")
	self.msg_simple_attack = hash("simple_attack")	

	msg.post("main:/difficulty#difficulty", "enemy_sender")
end

--атака на игрока
function decrease_player_health(self)
	msg.post("player#player", "simple_attack")
	print(self.damage_enemy)
end

--уменьшение здоровья врага
function decrease_enemy_health(self, damage)

	self.health = self.health - damage

	--смерть и лут
	if self.health <= 0 then
		go.delete()
		msg.post("loot#loot", "create_loot", {pos_loot = self.pos})

		--сообщ игроку что враг мёртв
		msg.post("player#player", "enemy_death", {score = 100})
	else
		--шкала здоровья
		self.scale = go.get("#lifebar_background", "scale")
		--если достигнут макс уровень
		if self.health > self.max_health then
			self.scale.x = self.max_health
		else
			self.scale.x = (self.health/self.max_health) + 0.001
		end

		go.set("#lifebar_progress", "scale", self.scale)
	end
end

function update(self, dt)
	if not self.player_attack then
		--self.platypus.update(dt)
		self.pos = go.get_position()

		--типа движение врага
		self.pos.x = self.pos.x + self.speed * dt
		go.set_position(self.pos)
	end

	self.player_attack = false
end

function on_message(self, message_id, message, sender)

	--сложность
	if message_id == hash("attack_enemy") then
		self.damage_enemy = self.damage_enemy*message.attack_diff
	end
	
	--столкновение врага с препятсвием
	if message.group == self.GROUP_obstacle_for_enemy then
		if self.obstacle_for_enemy_CONTACT then
			self.obstacle_for_enemy_CONTACT = false
			self.speed = -self.speed
		else
			self.obstacle_for_enemy_CONTACT = true
		end
	end

	if message.group == GROUP_player then
		--остановка перед атакой перед игроком
		self.player_attack = true
		decrease_player_health(self)
	end

	--атака от игрока
	if message_id == self.msg_simple_attack then
		decrease_enemy_health(self, message.damage_player)
	end

	--выстрел от игрока
	if message_id == self.msg_shot_attack then
		decrease_enemy_health(self, go.get("player#player", "shot_player"))
	end
end