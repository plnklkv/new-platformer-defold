local level1 = 1
local level2 = 1
local level3 = 1

local money = 0

--стоимость улучшений 
local money_scill1 = 20
local money_scill2 = 30
local money_scill3 = 40

--разрешить нажать на кнопку
local action_scill1 = false
local action_scill2 = false
local action_scill3 = false

function button_transparent2(button, value)
	gui.set_color(button, vmath.vector4(value, value, value, value))
end

function update_transparent2()
	if level1 >= 3 or money_scill1 > money then
		button_transparent(button_scill1, 0.5)
		action_scill1 = false
	else
		button_transparent(button_scill1, 1)
		action_scill1 = true
	end
	if level2 >= 3 or money_scill2 > money then
		button_transparent2(button_scill2, 0.5)
		action_scill2 = false
	else
		button_transparent2(button_scill2, 1)
		action_scill2 = true
	end
	if level3 >= 3 or money_scill3 > money then
		button_transparent(button_scill3, 0.5)
		action_scill3 = false
	else
		button_transparent(button_scill3, 1)
		action_scill3 = true
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(".", "disable")

	button_close2 = gui.get_node("close2")
	button_scill1 = gui.get_node("button_skill1")
	button_scill2 = gui.get_node("button_skill2")
	button_scill3 = gui.get_node("button_skill3")

	--update_transparent2()
end

function update_scill(scill, level)
	if scill == 1 then
		if level1 == 2 then
			print("навык 1 - уровень 2")
			msg.post("default:/player#player", "update_level_scill1", {damage = 1.7, cooldown = 4})
		elseif level1 == 3 then
			print("навык 1 - уровень 3")
			msg.post("default:/player#player", "update_level_scill1", {damage = 2, cooldown = 2})

		end

		money = money - money_scill1
	end

	if scill == 2 then
		if level2 == 2 then
			print("навык 2 - уровень 2")
			msg.post("default:/weapon#weapon", "update_level_scill", {enemy_line = true, damage = 20, speed = 10, cooldown = 12})
		elseif level2 == 3 then
			print("навык 2 - уровень 3")
			msg.post("default:/weapon#weapon", "update_level_scill", {enemy_line = true, damage = 40, speed = 10, cooldown = 11})
			
		end
		
		money = money - money_scill2
	end

	if scill == 3 then
		if level3 == 2 then
			print("навык 3 - уровень 2")
			msg.post("default:/player#player", "update_level_scill3", {meter = 200, splash = false, cooldown = 12})
		elseif level3 == 3 then
			print("навык 3 - уровень 3")
			msg.post("default:/player#player", "update_level_scill3", {meter = 200, splash = true, cooldown = 10})
			
		end
		
		money = money - money_scill3
	end
	msg.post("default:/platform#game", "scill_update_player", {money = money})
end

function update(self, dt)
	
end


function message_update2(level, value, text)
	if level < value then
		gui.set_text(gui.get_node(text), text .. "(" .. level .. " lvl) => " .. level + 1)
	else
		gui.set_text(gui.get_node(text), text .. "(MAX)")
		gui.set_enabled(gui.get_node("button_" ..text), false)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("message_update_scills") then
		money = message.money
		gui.set_text(gui.get_node("money"), "money: " .. money)


		message_update2(level1, 3, "skill1")
		message_update2(level2, 3, "skill2")
		message_update2(level3, 3, "skill3")
		

		gui.set_text(gui.get_node("text_skill1"), "update for " .. money_scill1)
		gui.set_text(gui.get_node("text_skill2"), "update for " .. money_scill2)
		gui.set_text(gui.get_node("text_skill3"), "update for " .. money_scill3)
	end
end

function on_input(self, action_id, action)

	if action.released and (gui.pick_node(button_close2, action.x, action.y)) and action_id == hash("touch") then
		msg.post(".", "disable")
		msg.post("menu#menu", "enable")
	end

	if action.released and action_scill1 and (gui.pick_node(button_scill1, action.x, action.y)) and action_id == hash("touch") then
		level1 = level1 + 1 
		update_scill(1, level1)
		money_scill1 = money_scill1 + 10
	end
	
	if action.released and action_scill2 and (gui.pick_node(button_scill2, action.x, action.y)) and action_id == hash("touch") then
		level2 = level2 + 1
		update_scill(2, level2)
		money_scill2 = money_scill2 + 10

		
	end

	if action.released and (gui.pick_node(button_scill3, action.x, action.y)) and action_id == hash("touch") then
		level3 = level3 + 1
		update_scill(3, level3)
		money_scill3 = money_scill3 + 10
	end

	update_transparent2()
	
end